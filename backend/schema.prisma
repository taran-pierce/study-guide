// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String           @id @default(cuid())
  name            String           @default("")
  email           String           @unique @default("")
  password        String
  createdAt       DateTime?        @default(now())
  testResults     TestResult[]     @relation("TestResult_user")
  questionResults QuestionResult[] @relation("QuestionResult_user")
}

model Course {
  id          String       @id @default(cuid())
  name        String       @default("")
  questions   Question[]   @relation("Course_questions")
  testResults TestResult[] @relation("TestResult_course")
}

model Question {
  id          String           @id @default(cuid())
  question    String           @default("")
  course      Course[]         @relation("Course_questions")
  answer      Answer?          @relation("Answer_question")
  wrongAnswer WrongAnswer[]    @relation("Question_wrongAnswer")
  result      QuestionResult[] @relation("Question_result")
}

model Answer {
  id         String    @id @default(cuid())
  title      String    @default("")
  question   Question? @relation("Answer_question", fields: [questionId], references: [id])
  questionId String?   @unique @map("question")
}

model WrongAnswer {
  id       String     @id @default(cuid())
  question Question[] @relation("Question_wrongAnswer")
  title    String     @default("")
}

model TestResult {
  id             String           @id @default(cuid())
  title          String           @default("")
  score          String           @default("")
  user           User?            @relation("TestResult_user", fields: [userId], references: [id])
  userId         String?          @map("user")
  course         Course?          @relation("TestResult_course", fields: [courseId], references: [id])
  courseId       String?          @map("course")
  questionResult QuestionResult[] @relation("QuestionResult_test")
  completed      String           @default("")

  @@index([userId])
  @@index([courseId])
}

model QuestionResult {
  id             String       @id @default(cuid())
  title          String       @default("")
  result         Question[]   @relation("Question_result")
  resultResponse String       @default("")
  user           User[]       @relation("QuestionResult_user")
  test           TestResult[] @relation("QuestionResult_test")
}
